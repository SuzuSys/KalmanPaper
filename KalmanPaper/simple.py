"""simple functions"""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_funcs.ipynb.

# %% auto 0
__all__ = ['fill_empty_md_table_cells', 'reshow_doc', 'losi', 'dxlosi', 'lam']

# %% ../nbs/01_funcs.ipynb 3
import jax.numpy as jnp
from jaxtyping import Array, Float
from nbdev.showdoc import show_doc
from IPython.display import Markdown
import re

# %% ../nbs/01_funcs.ipynb 4
def fill_empty_md_table_cells(md: str, filler: str = r"$\!$") -> str:
    """
    Markdown のテーブル文字列（複数行含む）中で、
    セルが空（`|   |` や `| |` など）になっている部分を見つけ、
    filler（デフォルト "$\\!$"）を挿入する。

    注意：'|' の前後のスペースの扱いなどで誤検知する可能性があるので、
    実際の入力パターンに応じて調整してください。
    """
    lines = md.splitlines()
    out_lines = []
    # 正規表現：セル区切りのパイプ | … | で、セル中が空白または空
    # 例：|   | Column2 |
    # 改良：セル間の空白を許す
    cell_pattern = re.compile(r"(?<=\|)\s*(?=\|)")
    for ln in lines:
        # 各行で空セルパターンを filler に置き換え
        # `|   |` にマッチする部分を `| filler |` に置換
        newln = cell_pattern.sub(filler, ln)
        out_lines.append(newln)
    return "\n".join(out_lines)

# %% ../nbs/01_funcs.ipynb 5
def reshow_doc(sym):
  fixed = fill_empty_md_table_cells(show_doc(sym).__str__())
  return Markdown(fixed)

# %% ../nbs/01_funcs.ipynb 6
def losi(
    x: Float[Array, ""] # $x$
) -> Float[Array, ""]: # $\sigma(x)=1/(1+ e\\^{-x})$
  r"""$\!$*
  Logistic sigmoid 関数
  $$\sigma(x)=\frac{1}{1+e^{-x}}$$
  *$\!$"""
  return 1/(1+jnp.exp(-x))

# %% ../nbs/01_funcs.ipynb 8
def dxlosi(
    x: Float[Array, ""] # $x$
) -> Float[Array, ""]: # $(d/dx)\sigma(x)$
  r"""$\!$*
  Logistic sigmoid 関数の導関数
  $$\frac{d}{dx}\sigma(x)=\sigma(x)\{1-\sigma(x)\}$$
  *$\!$"""
  return losi(x) * (1 - losi(x))

# %% ../nbs/01_funcs.ipynb 10
def lam(
    x: Float[Array, ""] # $x$
) -> Float[Array, ""]: # $\lambda(x)$
  r"""$\!$*
  Lambda 関数
  $$\lambda(x)=\frac{1}{2x}\left[\sigma(x)-\frac{1}{2}\right]$$
  *$\!$"""
  return (losi(x) - 0.5)/(2*x)
